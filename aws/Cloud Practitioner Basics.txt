Best Practices for Users:
  Apply MFA on your Root Account.
  Create Individual IAM Users and never use the root account apart from the first time.
  Create a new use with `AdministratorAccess` which is kind of equivalent to the root user level and then perform all your actions including creating users and billing info from this new  Admin User.
  User Groups to assign permissions.
  Apply an IAM password policy. Like one uppercase, one lowercase, one symbol in password, password expiration, etc. for all the users.

Compute Services in AWS:
  EC2 - Highly Configurable Server: CPU, OS, Network, Memory
  ECS, EKS - Easy to deploy containerized Scaled Applications using Docker & Kubernetes.
  Fargate - Evolution of ECS, EKS. Microservices where you don't have to think about the infrastructure. It's kind of like Lambdas but for ECS, EKS.
  AWS Batch - Plans, Schedules and executes Batch Computing WOrkloads across the full range of AWS Compute Services and features such as EC2 and Spot Instances.
  Elastic BeanStalk - Orchestrates various AWS Services including EC2, S3, SNS, CloudWatch, Auto Scaling, etc.
  Lambdas - Serverless functions.

Storage Services in AWS:
  S3 - Object Storage
  S3 Glacier - Low cost storage for archiving long-term backup
  Storage Gateway - Hybrid Cloud Storage with Local Caching, extension of On Premises storage on to the Cloud
    - File Gateway
    - Volume Gateway
    - Tape Gateway
  EBS - Hard drive in the cloud you attach to EC2 instances. It can be attached to only 1 EC2 instance. It could be SSD, HDD.
  EFS - File Storage mountable to multiple EC2 instances at the same time.
  Snowball:
    Physially migrate lots of data via a computer suitcase, because online transfer is gonna be very costly as well as slow - 50 - 80 TB
    Snowball Edge: A better version of Snowball - 100 TB
    SnowMobile: Shipping Container, pulled by a truck - 100 PB

Enterprise Integration Services:
  Direct Connect - DX:
    Dedicated fibre running straight to AWS.
  VPN - Establish a secure network connection to AWS.
    Allows you to establish a secure and private tunnel from your network or device to the AWS Global Network.
    Site to Site VPN - Connecting your on-premise to your AWS Network
    Client VPN - Connecting your Laptop to your AWS Network
  Storage Gateway:
    Hybrid Storage service that enables on-premises apps to use AWS Cloud.
    You can use this for back up and archiving.
  Active Directory:
    Enables AWS resources to use managed Microsoft Active Directory in AWS Cloud.

Logging Services:
  CloudTrail:
    Logs API calls(SDK, CLI), between AWS Services(who can we blame).
    It's stored in S3.
    Who created this bucket?
    Who spun up that EC2 instance?

    It can also be used to detect malicious activities, detect misconfiguration, etc.

  CloudWatch:
    It's actually a resource monitor. Collection of Multiple services:
      Logs:
        It's the main service.
        Performance data about AWS Services, CPU utilization, Memory, Network Application Logs, etc.
        Lambda Logs.
      Metrics:
        Represents a time-ordered set of data points.
      Events:
        Trigger an event based on a condition. Eg: Every hour take Snapshots of servers.
      Alarms:
        Trigger notifications based on metrics.
      Dashboard:
        Create visualizations based on metrics.

EC2:
  Choose an OS, choose the CPU and Memory.
  Number of instances - Number of Servers.
  Choose the default VPC, make it public facing. If you want to make it provate then we need to add an ALB to the VPC first and then add that instance to the VPC.
  Create an IAM Role for EC2. It'll be used for logging into the EC2 instance using SSM.
  Add instance storage.
  Add a security group to the instance.
  Create a Key Pair - That's used for logging in to the server.

AWS Simple Systems Manager(SSM):
  There are 3 ways to get into a server.
  - SSH using the generated Key Pair - Preferred option
  - EC2 Instance Connect
  - Session Manager using SSM. It's similar to Instance Connect.

  SSM is also called Systems Manager and it offers:
  - Session Manager
  - Maintenance Windows
  - State Manager
  - Patch Manager
  - Fleet Manager
  - Inventory

  Session Manager sessions are recorded in AWS thus it provides transparency for people who are accessing the servers, but SSH, although is a simpler way doesn't provide for such transparency.

How to create an AMI?
  We basically create an AMI by taking a snapshot of an EC2 instance with all of our required dependencies installed in it.
  But the real question is that our dependencies constantly keep on increasing, so what do we do? Create a new AMI after a dependency has increased? That'll lead to a ton of AMIs in our account.

Auto Scaling Groups:
  Auto Scaling ensures that there's at least a minimum number of instances running for our App, within a region.
  So, even if we manually stop a healthy instance, the Auto Scaling group responds to it by spinning up new instances to maintain the configured desired number of healthy instances in the ASG.

  To create an ASG is very similar to creating an EC2 instance. But with add-ons to it.
  We choose the Min, Max and the Desired Group Size.
  Add it to one VPC, also to subnets within the VPC. It also internally means that an ASG can at max span to a region only.
  Add Scaling policies for the ASG.

  When we delete an ASG, it also takes down(terminates) the Auto Scaled instances in it.

  The deciding factor to spin up even more instances than the desired capacity is taken upon the amount of traffic and the `average workload` upon the number of instances.

Application Load Balancer(ALB):
  ALB has the responsibility to evenly distribute traffic in our EC2 instances.
  A Load balancer lies in the region, generally our EC2 instances lie in different AZs.
  So, an ALB is connected to a VPC, which is limited to a region, thus ALB is also limited to a region. We need to have at least 2 AZs for an ALB to operate.
  In creation of an ALB, we generally make it internet facing.
  An ALB also has got a target group which could have target types of Instance/IP/Lambda function. This Target group then references instances to which we target the traffic to.
  Then we add all the instances within the Target group to the ALB.
  An ALB has got a DNS domain name attached to it.

What's an IAM Role?
  It was used in logging into EC2 instannce for sessions.

VPC Basics:
  A VPC resides in a Region.
  Each VPC has got subnets in it.
  A Subnet resides in an Availability Zone.
  Each subnet has a NACL - Subnet level Firewall.
  Each subnet has a Route Table.
  Each public subnet has got a NAT.
  Each VPC has a Router.
  Each VPC has an Internet Gateway.
  Generally EC2 instances lie in a Public Subnet.
  Generally RDS instances lie in a Private Subnet.
  EC2 instances have Security Groups which is - Instance Level Firewall.
  Security Groups implicitly denies all trafiic so, we have to create `Allow` only rules.

Databases in AWS:
  DynamoDB: NoSQL, key/value database - Cassandra.
  DocumentDB: NoSQL, documents database - MongoDB.
  RDS that support multiple engines.
    Engines supported - MySQL, Postgres, Maria DB, Aurora.
    Aurora - AWS developed, fully managed database. 5x faster MySQL, 3x faster Postgres
    Aurora Serverless - Only runs when you need it, like Lambda functions.
  Neptune: Managed Graph Database.
  Redshift: Columnar(Instead of reading rows it reads columns) database, petabyte warehouse.
  ElastiCache: Redis or MemCached Database.

Simple Storage Service(S3):
  S3 is a global service.
  But the Buckets in S3 are gonna be Region Specific.
  `Please note that S3 !== RDS. RDS is a database software just like MySQL and S3 is actually the File storage.`
  In the very basics we store our Image, Video, Audio files in S3.
  S3 is used in conjunction with CloudFront a lot.

CloudFront:
  It's a Global Service.
  CloudFront Edge Locations is from where we serve our files quickly via a Content Delivery Network.
  It takes the content and copies it on multiple locations over the world. It serves content to the end user from the nearest Edge location to the end user.

  Creation:
    We create a distribution for ourselves.
    It basically creates a network of the content for us in this. So, it takes time for creation.

  So, what it basically does is that once a file is uploaded to a S3 bucket then it takes it and copies it over to all the other nodes of the network.
  Just like an ALB, a CloudFront distribution has got a DNS domain name attached to it.

Relational Database Service(RDS):
  There is pricing for the database as well based on the plan.
    For production it's $600/month
    For developer it's $200/month

  The storage on DB will be Auto Scaled.
  We will have to launch the RDS in a VPC.
  It's like a Multi AZ db that can be launched.
  We can even have back ups based on a time interval like 12 hours, 1 day, etc.
  This back up is done by taking Snapshots of the DB.
  We can even get the metrics if required on the DB instance.
  A DB also lies within one region itself. It can't be scaled to multiple regions.

AWS Lambda:
  An AWS Lambda is basically a function which is triggered when required. It doesn't require us to set up a server which is running 24/7.
  It can be written in all major programming languages.
  These functions also have got access to AWS Services, such as a function which is gonna run on CloudWatch logs.
  We just need to give permissions to the function for it.
  The permissions are granted with the help of Roles.
  Lambda functions can be run only for 15 mins or less.
  We can even test the functions in AWS itself.

  These functions can be triggered from different AWS services as well.
  We just have to set up the trigger configuration as that service in the Lambda function.

EC2 Pricing Model:
  EC2 has only 4 Pricing models or offerings in pricing:
    On Demand - Least Commitment
    Reserved - Best Long Term - Upto 75% off
    Spot - Biggest Savings - Upto 90% off
    Dedicated - Most Expensive

  On Demand:
    Whenever we launch a new EC2 instance it's by default On Demand.
    It has no upfront payment, thus no long term commitment.
    We are charged by the hour.
    This is ideal for Short Term, Spikey, unpredictable workloads, when you have a new experimental app to run.

  Reserved Instances:
    It needs to have a 1 Year or 3 Year contract. - Term
    We can make an upfront payment if we want to and we can even make it after the the tenure. But if we pay upfront then we'll have more savings on the instances. - Payment Type
    We can even schedule a reserving of an instance as per hour or week or day. - Class Offering.
    Reserved instances can be shared amongst multiple accounts and also unused RIs can be sold on Reserved Instances Marketplace.
    Class Offerings can be:
      Standard
      Convertible
      Scheduled

    Reduced Pricing Formula =  Term * Class Offering * Payment type

  Spot Instances:
    These instances are offered by AWS so that they can maximize the utilty of their idle servers. It's like hotel offers discounts for their vacant rooms.
    But the caveat here is that AWS can terminate these instances any time that they want.
    They really want to make us use their spare computing capacity.
    If they terminate it then you won't be charged for the partial hour of usage. But if you terminate the instance on your own then you're gonna be charged for even the partial hour of usage.

  Dedicated Instances:
    It is dedicated servers.
    Please note that even though expensive, these servers don't provide any performance enhancements whatsoever. Just the pricing differes due to regulatory models.
    This is designed to meet up the regulatory requirement when you have strict server-bound licensing that won't have multi-tenancy on their hardware.
    These are offered both in On-Demand and Reserved Instances - 70% off on-demand pricing
    Enterprises and Large Organizations may have security concerns or obligations, thus Dedicated Instances are the way to go.

VPC has only 2-3 things in it:
- EC2 instances
- ASGs
- RDS
- ALB

Free Services in AWS:
There are Free Services in AWS, but there are also services that spin up resources, then they'll cost you.

Fully Free Services:
  IAM
  VPC
  Cost Explorer
  Organizations
  Billing

The services which are themselves free but can cost you money once they provision resources:
  Auto Scaling
  CloudFormation(CFN)
  Elastic BeanStalk
  OpsWorks
  Amplify
  AppSync
  CodeStar

AWS Support Plans:
  Basic - Free
  Developer - $20/month - Tech support via Email, General Guidance.
  Business - $100/month - Tech support via Chat, Phone.
  Enterprise - $15,000/month - Gets a TAM assigned.

AWS Marketplace:
In AWS Marketplace allows you to buy/sell solutions from/to other AWS Customers.
A product can be free or can have an associated charge on it.
Products can be:
  AMIs
  CloudFormation Templates
  WAF Rules
  Web ACLs
  SaaS offerings

The product usage charge will be a part of your AWS Bill. We pay AWS first which in turn pays the product vendor.

AWS Trusted Advisor:
  This advises you on Security, saving money, performance, service limits and fault tolerance.
  It's nothing but an automated checklist on best practices on AWS.

  Free Plan - 7 Trusted Advisor Checks
  Business, Enterprise - All Trusted Advisor Checks

  It advises on:
    Cost Optimization
    Security
    Performance
    Fault Tolerance
    Service Limits

  We can set up Email Notifications for it as well.

AWS Organizations:
  We can get one Bill for all accounts in our Organization using the AWS Organization.
  We design one master account that pays all the bills of all the master and member accounts.
  We can use the Cost Explorer Service for this.
  AWS allows us to centrally manage Billing, compliance, security and share resources across your AWS accounts.

  It can even allow us to have Service Control Policies, which says that, we can give central control over the allowed permissions for all accounts. Such as the developers might get access only to EC2 services, VPC, RDS and not anything else.

  It consists of:
    Root Account User:
      It's a Single Sign-In identity taht has complete access.
    Organization Units:
      It is a group of accounts within an organization which can contain other organizatin units.
      It thus allows us to create a hierarchy.

  Whenever we create a new account, we need to use the `Forgot password` feature to let the new user login to the new account.
  At the time of an account removal we first have to delete the member account and then remove it from the Organization.

  AWS Organizational billing has also got another advantage which is called `Volume Discounts`
  By principle it says - The more you use, the more you save.

  So, if one account uses one service and another account uses the same service, then by consolidated billing, we combine the two and get the cost of the billing kind of reduced because of the `Volume Discounts` Principle.

AWS Cost Explorer:
  This service is specifically designed to see our usage costs. It let's us visualize, understand and manage our costs.
  We can also forecasting to get an idea of our future costs.
  We can generate and download our cost reports in a `.csv` file.
  We can view data with granularity - Monthly or Daily.
  We can view it in a graphical format as well. We can group and filter data as well.

Total Cost of Ownership(TCO):
  It tells us why we should use AWS in terms of cost savings.
  It helps is estimate how much money would we save when moving from On-Premise to AWS.
  It's only for approximation purposes only and not an exact calculator for resources.
  We can download a detailed report for the upcoming 3 years of approx. costing.

AWS Landing Zone:
  Helps Enterprises quickly set-up secure AWS Multi Account.
  Basically for Multi Account Architecture.

AWS Account Vending Machine(AVM):
  Automatically provisions and configures new accounts via Service Catalog Template.
  Uses Single Sign-On(SSO) for managing and accessing accounts.
  It allows customers to set up their own account baselines through a Landing Zone configuration and update pipeline.
  It encourages to have separate accounts for stuff, such a separate logging archives account, a security account, a shared services account, etc.
  AWS best practices in this area center around the need to isolate resources and workloads into multiple AWS accounts (resource containers) for isolation and scope of impact reductions.

Resource Groups and Tagging:
  Tags are words or phrases that act as metadata for organizing your AWS resources.
  Resource Groups are a collection of resources which share one or more tags.
  It helps in details with Metrics, Alarma, Configuration Settings.
  It can be organized according to projects, such as adding a tag of a project to a resource and then grouping it together for project tag.
  We can even apply multiple tags on a resource for efficient grouping.

AWS QuickStart:
  It has pre built templates built by AWS that helps us deploy popular stacks.
  It reduces 100s of manual steps.

  It is composed of 3 parts:
    A reference architecture for deployment
    AWS CloudFormation templates that automate and configure the deployment
    A deployment guide explaining the architecture and implementation in detail

  Most of the Quick Start reference deployments enable us to spin up fully functional architectures in less than an hour.
  Example: AWS Managed BlockChain.

AWS Cost and Usage Report:
  Generates a detailed spreadsheet, enabling us to analyze data and understand your AWS costs.
  Places the reports into S3 buckets.
  Use AWS Athena to turn the report into a queryable database.
  Use AWS QuickSight to visualize your billing data as graphs.

AWS Provisioning Services:
  The allocation or creation of resources to a customer.

  OpsWorks - Configuration Management Service, that provides managed instances. - Chef or Puppet are examples of it.
  Elastic BeanStalk is specifically geared towards web applications deployments.
  Whereas AWS QuickStart is kind of geared towards other things like BlockChain, etc.
  CloudFormation(CFN) - IaaC through JSON or YAML. It's the most complex but the most flexible option.

Shared Responsibility Model:
  Customers are responsible for the Data and Security in the Cloud(Data & Configs). Specifically, IAM, Firewall configs, Encryptions, etc.
  AWS is responsible for Security of the Cloud. Hardware, Global Infra, Operation of Managed Services.

AWS Compliance Programs:
  Compliance programs are a set of internal policies and procedures of a company to comply with laws, rules and regulations to uphold business reputation.
  There are tons of compliance programs:
    ISO 9001, HIPAA, FIPS, FedRAMP, PCI, NIST, etc.
    It can also be country specific.

Kinesis:
  It's specifically designed for Video streaming.

Amazon Connect:
  AWS's own Call Center.

Comparative Study:
  Media Connect & Elastic Transcoder:
    It's actually the new version of Elastic Transcoder.
    Converts videos to different Video types.
    It has AWS Elemental MediaConvert - The new way, it has additional features.
      Both AWS Elemental MediaConvert and Elastic Transcoder - transcodes videos to streaming formats
      Overlays Images
      Extracts Captions

  SNS & SQS:
    Both are application integration services. They Both connect Apps via Messages.
    SNS - Pass along messages - PubSub.
      Really good for WebHooks, Simple Internal Emails, Triggering Lambda functions.
    SQS - Queue up messages, guaranteed delivery.
      Really good for delayed tasks, queueing up emails.

  Inspector & Trusted Advisor:
    Both are security tools and both performs audits.
    Inspector Audits a single EC2 instance.
    Trusted Advisor doesn't generate a PDF report.
      Gives you a holistic view of recommendations across multiple services and best practices.

  ALB & NLB:
    Both have target groups.
    ALB operates on Layer 7 of OSI model - HTTP, HTTPS traffic.
      Can attach WAF.
    NLB operates on Layer 4(Transport) of OSI model - IP Protocol Data - TCP & TLS traffic.
      Handles millions of requests/second while maintaining ultra-low latencies.
      Optimized for traffic spikes while using a single static IP address/AZ.

  SNS & SES:
    Both sends emails.
    SNS sends plain text emails.
      Sends notifications to subscribers only.
      SNS has wide scope of integration with other AWS services.
    SES sends HTML supported emails.
      Cloud based Email Service.
      SES can receive inbound emails.

  Artifact & Inspector:
    Artifact - Should an enterpise trust AWS?
      Generates security reports based on Global Compliance Rules.
    Inspector - How do we know this EC2 instance is secure?
      Audit tool for security of EC2 instances only.

AWS Security Module:
  AWS Security module apart from the regular AWS Security are as follows:

  Artifact:
    How do we prove AWS meets a compliance?
    It's an on-demand acceess to AWS's security & compliance reports.
    These reports can be in `.pdf` and `.xlsx` formats.
    AWS Artifact provides customers with on-demand access to AWS compliance reports and select online agreements. It allows you to download AWS security and compliance documents such as ISO certifications, Payment Card Industry (PCI) reports, and Service Organization Control (SOC) reports. This service helps you ensure that AWS meets your internal security and compliance requirements. For example, a financial services company can use AWS Artifact to access SOC 2 reports to demonstrate compliance to auditors.
    It's free and Managed Service.
    It's logging is done in CloudTrail.

  Audit Manager:
    AWS Audit Manager simplifies the process of auditing AWS usage to ensure compliance with industry standards and regulations. It continuously collects evidence and provides a customizable framework to manage your compliance efforts. This helps reduce the time and effort required to prepare for audits. For example, a healthcare provider can use Audit Manager to ensure compliance with HIPAA regulations by automatically generating audit reports based on their AWS resource configurations and usage.

  ACM (AWS Certificate Manager):
    AWS Certificate Manager (ACM) simplifies the provisioning, managing, and deployment of public and private SSL/TLS certificates for use with AWS services and your internal connected resources. ACM handles the complexity of creating and managing certificates, including renewing them automatically. This service allows you to secure websites and applications without managing SSL/TLS certificates manually. For instance, an e-commerce website can use ACM to secure its customer transactions by deploying SSL certificates to its CloudFront distribution and Elastic Load Balancers.

  AWS Private Certificate Authority:
    You, yourself can become CA, instead of purchasing certificate from a third party.

  CloudHSM (Cloud Hardware Security Module):
    AWS CloudHSM provides dedicated hardware security modules (HSMs) in the AWS Cloud to help you meet corporate, contractual, and regulatory compliance requirements for data security. It enables you to generate and use your own encryption keys within AWS and manage them using FIPS 140-2 Level 3 validated HSMs. CloudHSM is fully managed, which reduces the administrative overhead of running an HSM cluster. For example, a government agency can use CloudHSM to store encryption keys securely and meet stringent regulatory requirements for data protection.

    HSM and KMS is connected.
    HSM Cluster's main job is to manage Encryption Keys.

  Detective:
    AWS Detective makes it easy to analyze, investigate, and quickly identify the root cause of potential security issues or suspicious activities. It automatically collects log data from AWS resources and uses machine learning, statistical analysis, and graph theory to build a linked set of data that can be used for security investigations. Detective helps you identify unusual activities and understand their context within your AWS environment. For example, a security team can use Detective to investigate a suspicious login attempt and trace its origin back through the network activities and user behavior.
    It returns data in the form of graphs and tables.
    It needs Guard Duty to be running for 48 hours. It then provides the GuardDuty data to Detective for finding the `root cause`.

  Directory Service:
    Identity providers can be SAML, LDAP, etc.
    Active Directory is an identity provider.
    Active Directory contains information of the Users. Those users can be then be imported with AD Connector.
    AWS Directory Service offers multiple ways to set up and run Microsoft Active Directory (AD) in the AWS Cloud, or connect AWS resources with an existing on-premises AD. It provides a fully managed service, making it easier to manage and scale directory-aware workloads and AWS resources. This service supports AWS applications such as Amazon RDS for SQL Server and Amazon WorkSpaces. For instance, a company can use AWS Directory Service to integrate its on-premises Active Directory with AWS, allowing seamless access to cloud resources for its employees.

  Firewall Manager:
    AWS Firewall Manager simplifies the process of configuring and managing firewall rules across your AWS accounts and applications. It provides centralized control over security policies and lets you enforce them consistently across all your resources. Firewall Manager integrates with AWS WAF, AWS Shield, and VPC security groups. For example, an organization can use Firewall Manager to enforce a common set of security policies, such as blocking specific IP addresses or protecting against DDoS attacks, across all their AWS accounts.

  GuardDuty - Threat Detection:
    It's AWS's own Intrusion Detection and Protection System(IDS/IPS).
    It's actually a software application which monitors a network or systems for malicious activity or policy violations.

    It basically answers the question:
    How do we detect if someone is attempting to gain access to our AWS account or resources?

    AWS GuardDuty is a threat detection service that continuously monitors for malicious activity and unauthorized behavior to protect your AWS accounts and workloads. It uses machine learning, anomaly detection, and integrated threat intelligence to identify potential threats.
    GuardDuty analyzes data from:
    - AWS CloudTrail
    - VPC Flow Logs
    - DNS logs
    to detect unusual behavior. For example, a company can use GuardDuty to identify and respond to potential security threats, such as compromised EC2 instances or unauthorized access attempts.
    Malicious activities and unauthorized access tracking.

  IAM (Identity and Access Management):
    AWS Identity and Access Management (IAM) enables you to securely control access to AWS services and resources for your users. You can create and manage AWS users and groups, and use permissions to allow and deny access to AWS resources. IAM also supports multi-factor authentication (MFA) to enhance security. For instance, a development team can use IAM to grant specific permissions to its members, ensuring they have the necessary access to resources like S3 buckets and EC2 instances while maintaining security best practices.

  Identity Center (AWS Single Sign-On):
    AWS Identity Center (formerly AWS Single Sign-On) makes it easy to centrally manage SSO access and user permissions to all of your AWS accounts and applications. It provides a unified sign-in experience and allows you to manage user identities and access in a single place. Identity Center integrates with Microsoft Active Directory and other identity providers. For example, an enterprise can use Identity Center to enable its employees to access multiple AWS accounts and third-party applications using their existing corporate credentials.

  Inspector - Vulnerabilities - Guard of deviations from Best Practices:
    AWS Inspector is an automated security assessment service that helps improve the security and compliance of applications deployed on AWS. It automatically assesses applications for vulnerabilities and deviations from best practices. Inspector provides detailed findings and remediation steps to help you fix issues quickly. For instance, a SaaS provider can use Inspector to regularly scan its EC2 instances for security vulnerabilities, ensuring they meet compliance requirements and reducing the risk of security breaches.
    Compute resources can have vulnerabilities.
    Hardening of an EC2 instance:
      The act of eliminating as many security risks as possible.
    Inspector runs a security benchmark against specific EC2 instances. It can perform both Network and Host Assessments.
    We need to install Inspector on EC2 instances. Run an assessment target and review your findings.

  KMS (Key Management Service):
    It only Stores Keys in AWS.
    KMS is a multi-tenant HSM(Hardware Security Module).
    AWS Key Management Service (KMS) is a managed service that makes it easy to create and control the encryption keys used to encrypt your data.
    KMS integrates with many other AWS services to help you protect your data using encryption.
    It provides centralized control over the lifecycle and permissions of your encryption keys.
    For example, a healthcare application can use KMS to encrypt patient records stored in S3, ensuring that sensitive data is protected and access is controlled.
    KMS uses Envelope Encryption.

    Envelope Encryption:
      When you encrypt your data, your data is protected, but you have to protect your encryption key.
      When you encrypt your data key with a master key as an additional layer of security.

  Macie - Data regulation, discovery through ML:
    Macie continuously monitors S3 data access activity.
    AWS Macie is a fully managed data security and data privacy service that uses machine learning and pattern matching to discover and protect your sensitive data in AWS. Macie automatically identifies and alerts you to sensitive data, such as personally identifiable information (PII), in your Amazon S3 buckets. It helps you meet compliance requirements and reduce the risk of data breaches. For instance, an e-commerce company can use Macie to monitor and protect customer data stored in S3, ensuring compliance with data protection regulations like GDPR.
    If you mistakenly put PII into your S3 buckets, then it will tell you.
    So, basically, it's Data Privacy Regulation through ML.
    Macie will identify your most at-risk users which could lead to a compromise.

  Network Firewall:
    AWS Network Firewall is a managed service that provides essential network protections for your Amazon VPCs. It includes stateful inspection, intrusion prevention and detection, and web filtering capabilities. Network Firewall allows you to set up rules to protect your applications and data from external and internal threats. For example, a financial institution can use Network Firewall to implement strict security policies, such as blocking malicious traffic and preventing unauthorized access to sensitive financial data.
      Firewall Policy.
      Firewall Rule Group.

  AWS RAM (Resource Access Manager) - Resource Sharing:
    AWS Resource Access Manager (RAM) allows you to share your AWS resources with any AWS account or within your AWS organization. It helps you reduce costs and improve resource utilization by sharing resources like VPCs, subnets, and transit gateways. RAM simplifies resource management and enhances collaboration across different teams and departments. For instance, a large enterprise can use RAM to share a single VPC across multiple business units, ensuring efficient use of network resources and simplifying management.

  Secrets Manager:
    AWS Secrets Manager helps you protect access to your applications, services, and IT resources without the upfront cost and complexity of managing your own hardware security modules (HSMs). It allows you to securely store, retrieve, and manage secrets such as database credentials, API keys, and other sensitive information. Secrets Manager automatically rotates secrets to help you meet security and compliance requirements. For example, a development team can use Secrets Manager to store and rotate database credentials, ensuring that their applications have secure access to the database without exposing sensitive information.

    Remember:
      For other types of secrets we have another services:
        AWS Credential: IAM
        Encryption Keys: AWS KMS
        SSH keys: EC2 instance Connect
        Private Keys & Certificate: AWS ACM

  Security Hub:
    AWS Security Hub provides a comprehensive view of your high-priority security alerts and compliance status across AWS accounts. It aggregates, organizes, and prioritizes security findings from multiple AWS services and third-party solutions. Security Hub helps you identify and manage security risks more effectively. For instance, a security operations team can use Security Hub to monitor and respond to security alerts from services like GuardDuty, Inspector, and Macie, ensuring a unified approach to security management.

  Shield:
    Distributed DDoS attack:
      A malicious attempt to disrupt normal traffic by flodding a large amount of Fake Traffic.
    It protects you against Layer 3, 4, 7 of OSI model attacks:
      3 - Network
      4 - Transport
      7 - Application
    When you route traffic through Route53, or CloudFront we can use AWS Shield.

    AWS Shield is a managed Distributed Denial of Service (DDoS) protection service that safeguards applications running on AWS. It offers two levels of protection: Shield Standard, which provides automatic protection at no additional cost, and Shield Advanced, which provides enhanced DDoS protection and 24/7 access to the AWS DDoS Response Team (DRT). Shield helps you minimize application downtime and latency. For example, an online gaming company can use Shield Advanced to protect its gaming servers from DDoS attacks, ensuring a smooth gaming experience for its users.
    So, CloudFront is protected by AWS Shield as well as WAF.

    Shield Advanced is additional protection on these services:
      Route53
      CloudFront
      ELB
      Global Accelerator
      Elastic IP(EC2, NLB)

  WAF (Web Application Firewall):
    AWS WAF is a web application firewall that helps protect your web applications from common web exploits and attacks. It allows you to create custom security rules to block common attack patterns, such as SQL injection and cross-site scripting (XSS). WAF integrates with services like Amazon CloudFront, Application Load Balancer, and API Gateway. For example, an e-commerce website can use AWS WAF to create rules that block malicious requests and protect customer data, enhancing the security of their online transactions.
    Just like ALB is integrated with EC2 instances, CloudFront is integrated with S3.
    ALB lies ahead of EC2, CloudFront lies ahead of S3.
    So, we apply WAF on ALB, CloudFront.
    IP whitelisting, blacklisting. It also provides count of the requests hit.
    Run Capcha or challenge checks.

Penetration Testing:
  It's an Authorized Simulated Cyber Attack on a Computer System, performed to evaluate Security of the system.
  We can perform PenTesting on AWS.
